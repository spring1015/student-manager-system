# coding=utf-8
import requests

#定义一个标准化请求
class HttpRequest(object):
    """不记录任何的请求方法"""
    @classmethod
    def request(cls,method,url,data=None,headers=None): # 这里是要传入的参数，请求方法、接口地址、传参、头文件
        method = method.upper() # 这里将传入的请求方法统一大写，然后进行判断采用什么方法
        if method == 'POST':
            return requests.post(url=url,data=data,headers=headers)
        elif method == 'GET':
            return requests.get(url=url,params=params,headers=headers)

class HttpSession(object):
    """记录Session的方法"""
    def __init__(self):
        self.session = requests.session() # 初始化一个保存session的方法

    def request(self,method,url,data=None,headers=None):
        method = method.upper()
        if method == 'POST':
            return self.session.post(url=url,data=data,headers=headers)
        elif method == 'GET':
            return self.session.get(url=url,params=data,headers=headers)

    def close(self):
        """断开session连接的方法"""
        self.session.close()

if __name__ == '__main__':
    http = HttpSession()
    http_one = http.request(method='post',url='',data={}).json() #登录接口
    http_two = http.request(method='post',url='',data={}).json() #充值接口
    
'''这里用充值接口来举例，所以我们直接使用的是记录Session信息的HTTP请求方法，
因为充值接口是不可以直接请求成功的，是需要用户先登录，然后获取登录后的Session信息，然后将用户信息和Session信息一同发送给充值接口，才能充值成功！否则会提醒先登录。
我们这里是将返回数据以json格式显示，看起来像字典，也比较清晰！'''
